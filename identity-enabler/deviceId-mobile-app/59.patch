From 0fba87049b4544387cd547f72dc375063f946c97 Mon Sep 17 00:00:00 2001
From: Severin Skillman <severin.skillman@iota.org>
Date: Wed, 22 Dec 2021 11:54:01 +0100
Subject: [PATCH 1/8] fix problems in device claims and credential issuance
 flow

---
 .../src/components/InvalidCredential.svelte   |  11 +-
 .../src/pages/CreateQR.svelte                 |  18 ++-
 .../deviceId-mobile-app/src/pages/Scan.svelte | 109 +++++++++++-------
 .../holder-mobile-app/src/App.svelte          |   2 +
 .../src/pages/DeviceCredential.svelte         |  23 ++--
 .../src/pages/InvalidCredential.svelte        |  73 ++++++++++++
 .../holder-mobile-app/src/pages/Scan.svelte   |  71 +++++-------
 7 files changed, 193 insertions(+), 114 deletions(-)
 create mode 100644 identity-enabler/holder-mobile-app/src/pages/InvalidCredential.svelte

diff --git a/identity-enabler/deviceId-mobile-app/src/components/InvalidCredential.svelte b/identity-enabler/deviceId-mobile-app/src/components/InvalidCredential.svelte
index ac3ef28..fcf71cc 100644
--- a/identity-enabler/deviceId-mobile-app/src/components/InvalidCredential.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/components/InvalidCredential.svelte
@@ -1,20 +1,18 @@
 <script>
-    import { navigate } from "svelte-routing";
     import { fly } from "svelte/transition";
     import Button from "../components/Button.svelte";
 
-    function goBack() {
-        navigate("/home");
-    }
+    export let showInvalid = false;
+    export let message = "Invalid credential";
 </script>
 
 <main transition:fly={{ y: 200, duration: 500 }}>
     <section>
         <i class="icon-cross" />
-        <p>INVALID CREDENTIAL</p>
+        <p>{message}</p>
     </section>
     <footer>
-        <Button label="Done" onClick={goBack} />
+        <Button label="Done" onClick={() => (showInvalid = false)} />
     </footer>
 </main>
 
@@ -49,6 +47,7 @@
         font-size: 1.9vh;
         line-height: 3.4vh;
         color: #fff;
+        text-transform: uppercase;
     }
 
     .icon-cross {
diff --git a/identity-enabler/deviceId-mobile-app/src/pages/CreateQR.svelte b/identity-enabler/deviceId-mobile-app/src/pages/CreateQR.svelte
index 9817d36..908ace1 100644
--- a/identity-enabler/deviceId-mobile-app/src/pages/CreateQR.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/pages/CreateQR.svelte
@@ -7,6 +7,7 @@
     import { ServiceFactory } from "../factories/serviceFactory";
     import FullScreenLoader from "../components/FullScreenLoader.svelte";
     import Button from "../components/Button.svelte";
+    import { showAlert } from "../lib/ui/helpers";
 
     const { Device } = Plugins;
 
@@ -14,19 +15,24 @@
     const name = window.history.state.name;
 
     let loading = false;
-    let deviceClaims = "";
 
     onMount(async () => {
         try {
             loading = true;
             const storedIdentity = await identityService.retrieveIdentity();
-            deviceClaims = await Device.getInfo();
-            deviceClaims = { deviceName: name, id: storedIdentity.doc.id, ...deviceClaims };
-            console.log("deviceClaims", deviceClaims);
-            deviceClaims = JSON.stringify(deviceClaims, null, 2);
-            await createMatrix(deviceClaims);
+            const deviceInfo = await Device.getInfo();
+            const credentialSubject = {
+                id: storedIdentity.doc.id,
+                deviceName: name,
+                manufacturer: deviceInfo.manufacturer,
+                model: deviceInfo.model,
+                operatingSystem: deviceInfo.operatingSystem,
+                osVersion: deviceInfo.osVersion
+            };
+            await createMatrix(JSON.stringify(credentialSubject));
             loading = false;
         } catch (err) {
+            await showAlert("Error", err.message);
             console.error(err);
             loading = false;
         }
diff --git a/identity-enabler/deviceId-mobile-app/src/pages/Scan.svelte b/identity-enabler/deviceId-mobile-app/src/pages/Scan.svelte
index 080b853..edc6d21 100644
--- a/identity-enabler/deviceId-mobile-app/src/pages/Scan.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/pages/Scan.svelte
@@ -3,8 +3,6 @@
     import { fly } from "svelte/transition";
     import { Plugins } from "@capacitor/core";
     import { ServiceFactory } from "../factories/serviceFactory";
-    import { error } from "../lib/store";
-    import { parse } from "../lib/helpers";
     import { __ANDROID__ } from "../lib/platforms";
     import Scanner from "../components/Scanner.svelte";
     import InvalidCredential from "../components/InvalidCredential.svelte";
@@ -12,63 +10,82 @@
     import { BarcodeFormat, BrowserMultiFormatReader, DecodeHintType } from "@zxing/library";
     import type { IdentityService } from "../services/identityService";
     import { playAudio } from "../lib/ui/helpers";
+    import { onMount } from "svelte";
 
-    const { Toast } = Plugins;
+    // We delay playing the valid or invalid sound in order not to overlap
+    // with the scanning sound
+    const PLAY_DELAY = 400;
+    const { Toast, App } = Plugins;
     const formats = new Map().set(DecodeHintType.POSSIBLE_FORMATS, [BarcodeFormat.DATA_MATRIX, BarcodeFormat.QR_CODE]);
     const reader = new BrowserMultiFormatReader(formats);
 
     let VP;
-    let invalid = false;
+    let showInvalid = false;
+    let invalidMessage: string;
     let loading = false;
 
+    onMount(() => App.addListener("backButton", goBack).remove);
+
     async function handleScannerData(event) {
+        await playAudio("scanned");
+        loading = true;
         try {
-            await playAudio("scanned");
-
-            loading = true;
-            let parsedData = parse(event.detail);
-            VP = parsedData;
-
-            if (!VP) {
-                await playAudio("invalid");
-                return showAlert();
-            }
-
-            const identityService = ServiceFactory.get<IdentityService>("identity");
-            const verificationResult = await identityService.verifyVerifiablePresentation(VP);
-
-            if (verificationResult) {
-                await playAudio("valid");
-
-                showToast();
-                loading = false;
-                navigate("credential", { state: { credential: VP, save: true } });
-            } else {
-                await playAudio("invalid");
-
-                loading = false;
-                showAlert();
-                error.set("Invalid Data Matrix");
-            }
-        } catch (err) {
+            VP = JSON.parse(event.detail);
+        } catch (e) {
+            console.error(e);
+            setTimeout(async () => await playAudio("invalid"), PLAY_DELAY);
+            return showAlert("Invalid JSON");
+        }
+
+        if (!VP) {
+            setTimeout(async () => await playAudio("invalid"), PLAY_DELAY);
+            return showAlert();
+        }
+
+        const identityService = ServiceFactory.get<IdentityService>("identity");
+        const identity = await identityService.retrieveIdentity();
+
+        const credentialSubjectId = VP.verifiableCredential?.credentialSubject?.id;
+        if (credentialSubjectId === undefined) {
+            await playAudio("invalid");
+            showAlert();
+            return;
+        }
+
+        const id = JSON.parse(identity.didDoc).id;
+        if (id !== credentialSubjectId) {
+            // check that this VP/VC is for the current device
             await playAudio("invalid");
-            console.error(err);
+            showAlert("Incorrect credential subject");
+            return;
         }
+
+        const verificationResult = await identityService.verifyVerifiablePresentation(VP);
+
+        if (!verificationResult) {
+            await playAudio("invalid");
+            loading = false;
+            return showAlert();
+        }
+
+        await playAudio("valid");
+        showToast();
+        loading = false;
+        navigate("credential", { state: { credential: VP, save: true } });
     }
 
     // handles input button
     const imageSelected = e => {
         const image = e.currentTarget.files[0];
-
         const fr = new FileReader();
         fr.onload = (e: ProgressEvent<FileReader>) => {
             reader
                 .decodeFromImageUrl(e.target.result as string)
-                .then(result => {
-                    handleScannerData({ detail: result.getText() });
-                })
-                .catch(e => {
+                .then(result => handleScannerData({ detail: result.getText() }))
+                .catch(async e => {
                     console.error(e);
+                    await playAudio("invalid");
+                    showAlert("Failed to decode image");
                 });
         };
         fr.readAsDataURL(image);
@@ -81,12 +98,18 @@
         });
     }
 
-    function showAlert() {
-        invalid = true;
+    function showAlert(message = "Invalid credential") {
+        showInvalid = true;
+        invalidMessage = message;
         loading = false;
     }
 
     function goBack() {
+        if (showInvalid) {
+            showInvalid = false;
+            return;
+        }
+
         window.history.back();
     }
 </script>
@@ -96,11 +119,11 @@
         <FullScreenLoader label="Verifying Credential..." />
     {/if}
 
-    {#if invalid && !loading}
-        <InvalidCredential />
+    {#if showInvalid && !loading}
+        <InvalidCredential bind:showInvalid message={invalidMessage} />
     {/if}
 
-    {#if !invalid && !loading}
+    {#if !showInvalid && !loading}
         <header>
             <i on:click={goBack} class="icon-chevron" />
             <p>Scanner</p>
diff --git a/identity-enabler/holder-mobile-app/src/App.svelte b/identity-enabler/holder-mobile-app/src/App.svelte
index 8f47cfe..8b65a7b 100644
--- a/identity-enabler/holder-mobile-app/src/App.svelte
+++ b/identity-enabler/holder-mobile-app/src/App.svelte
@@ -17,6 +17,7 @@
     import Keychain from "./lib/keychain";
     import { parse } from "./lib/helpers";
     import type { IdentityService } from "./services/identityService";
+    import InvalidCredential from "./pages/InvalidCredential.svelte";
 
     let url = window.location.pathname;
     let displayHome = false;
@@ -95,6 +96,7 @@
             <Route path="/scan" component={Scan} />
             <Route path="/devinfo" component={DevInfo} />
             <Route path="/createPresentation" component={CreatePresentation} />
+            <Route path="/invalid" component={InvalidCredential} />
         </div>
     </Router>
     <Modal>
diff --git a/identity-enabler/holder-mobile-app/src/pages/DeviceCredential.svelte b/identity-enabler/holder-mobile-app/src/pages/DeviceCredential.svelte
index 6b0b24e..f2cec4f 100644
--- a/identity-enabler/holder-mobile-app/src/pages/DeviceCredential.svelte
+++ b/identity-enabler/holder-mobile-app/src/pages/DeviceCredential.svelte
@@ -16,7 +16,7 @@
     let showTutorial = false;
     let loading = false;
 
-    const claims = window.history.state.claims;
+    const credentialSubject = window.history.state.credentialSubject;
 
     async function createCredential() {
         if (navigator.onLine === false) {
@@ -29,21 +29,14 @@
         error.set(null);
         try {
             const storedIdentity = await identityService.retrieveIdentity();
-            const payload = {
-                DeviceData: {
-                    "Device Name": claims.deviceName,
-                    Manufacturer: claims.manufacturer,
-                    "Serial Number": claims.uuid,
-                    "Operating System": claims.operatingSystem,
-                    Model: claims.model,
-                    "OS Version": claims.osVersion
-                }
-            };
+            const subjectId = credentialSubject.id;
+            const claims = {...credentialSubject};
+            delete claims.id;
             const newCredential = await identityService.createSignedCredential(
-                claims.id,
+                subjectId,
                 storedIdentity,
                 CredentialType.DEVICE_ID,
-                payload
+                claims
             );
             const credentialId = generateRandomId();
             const enrichment = identityService.enrichCredential({ ...newCredential });
@@ -93,11 +86,11 @@
                 <i on:click={onClickDev} class="icon-code" />
             </div>
             <header>
-                <p>Device {claims.deviceName} claims</p>
+                <p>Device claims</p>
             </header>
         </div>
         <section>
-            <ObjectList object={claims} />
+            <ObjectList object={credentialSubject} />
         </section>
         <footer>
             <Button label="Issue Device ID credential" onClick={createCredential} />
diff --git a/identity-enabler/holder-mobile-app/src/pages/InvalidCredential.svelte b/identity-enabler/holder-mobile-app/src/pages/InvalidCredential.svelte
new file mode 100644
index 0000000..7c8380d
--- /dev/null
+++ b/identity-enabler/holder-mobile-app/src/pages/InvalidCredential.svelte
@@ -0,0 +1,73 @@
+<script>
+    import { onMount } from "svelte";
+    import { fly } from "svelte/transition";
+    import Button from "../components/Button.svelte";
+    import { playAudio } from "../lib/ui/helpers";
+
+    const message = window.history?.state?.message;
+    const PLAY_DELAY = 500;
+    onMount(() => {
+        // We wait a little bit in order not to overlap the different aural feedback
+        setTimeout(async () => await playAudio("invalid"), PLAY_DELAY);
+    });
+
+    function onDone() {
+        window.history.back();
+    }
+</script>
+
+<main transition:fly={{ y: 200, duration: 500 }}>
+    <section>
+        <i class="icon-cross" />
+        <p>{message ?? "Invalid credential"}</p>
+    </section>
+    <footer>
+        <Button label="Done" onClick={onDone} />
+    </footer>
+</main>
+
+<style>
+    main {
+        display: flex;
+        flex-direction: column;
+        overflow-y: auto;
+        -webkit-overflow-scrolling: touch;
+        height: 100%;
+        width: 100%;
+        background: black;
+    }
+
+    section {
+        z-index: 2;
+        height: 100%;
+        width: 100%;
+        display: flex;
+        flex-direction: column;
+        justify-content: center;
+        align-items: center;
+    }
+
+    section > p {
+        z-index: 2;
+        position: relative;
+        justify-content: center;
+        align-items: center;
+        font-family: "Proxima Nova", sans-serif;
+        font-weight: 600;
+        font-size: 1.9vh;
+        line-height: 3.4vh;
+        color: #fff;
+        text-transform: uppercase;
+    }
+
+    .icon-cross {
+        font-size: 64px;
+    }
+
+    footer {
+        position: fixed;
+        width: 100%;
+        bottom: 0;
+        z-index: 6;
+    }
+</style>
diff --git a/identity-enabler/holder-mobile-app/src/pages/Scan.svelte b/identity-enabler/holder-mobile-app/src/pages/Scan.svelte
index 288e7c9..bae77c4 100644
--- a/identity-enabler/holder-mobile-app/src/pages/Scan.svelte
+++ b/identity-enabler/holder-mobile-app/src/pages/Scan.svelte
@@ -1,42 +1,37 @@
 <script lang="ts">
     import { navigate } from "svelte-routing";
     import { fly } from "svelte/transition";
-    import { parse } from "../lib/helpers";
     import { __ANDROID__ } from "../lib/platforms";
     import Scanner from "../components/Scanner.svelte";
-    import FullScreenLoader from "../components/FullScreenLoader.svelte";
     import { BarcodeFormat, BrowserMultiFormatReader, DecodeHintType } from "@zxing/library";
     import { playAudio } from "../lib/ui/helpers";
 
     const formats = new Map().set(DecodeHintType.POSSIBLE_FORMATS, [BarcodeFormat.DATA_MATRIX, BarcodeFormat.QR_CODE]);
     const reader = new BrowserMultiFormatReader(formats);
-    let claims = "";
-    let invalid = false;
-    let loading = false;
 
     // We delay playing the valid or invalid sound in order not to overlap
     // with the scanning sound
     const PLAY_DELAY = 400;
 
     async function handleScannerData(event) {
+        await playAudio("scanned");
+        let credentialSubject;
+
         try {
-            await playAudio("scanned");
-
-            loading = true;
-            let parsedData = parse(event.detail);
-            claims = parsedData;
-
-            if (claims) {
-                setTimeout(async () => await playAudio("valid"), PLAY_DELAY);
-                navigate("/devicecredential", { state: { claims: claims } });
-            } else {
-                setTimeout(async () => await playAudio("invalid"), PLAY_DELAY);
-                return showAlert();
-            }
+            credentialSubject = JSON.parse(event.detail);
         } catch (err) {
-            setTimeout(async () => await playAudio("invalid"), PLAY_DELAY);
             console.error(err);
+            navigate("/invalid", { state: { message: "Invalid JSON" } });
+            return;
+        }
+
+        if (typeof credentialSubject?.id !== "string" || !credentialSubject.id.startsWith("did:iota:")) {
+            navigate("/invalid", { state: { message: "Missing subject ID" } });
+            return;
         }
+
+        setTimeout(async () => await playAudio("valid"), PLAY_DELAY);
+        navigate("/devicecredential", { state: { credentialSubject } });
     }
 
     // handles input button
@@ -47,44 +42,32 @@
         fr.onload = (e: ProgressEvent<FileReader>) => {
             reader
                 .decodeFromImageUrl(e.target.result as string)
-                .then(result => {
-                    handleScannerData({ detail: result.getText() });
-                })
+                .then(result => handleScannerData({ detail: result.getText() }))
                 .catch(e => {
                     console.error(e);
+                    navigate("/invalid", { state: { message: "Failed to decode image" } });
                 });
         };
         fr.readAsDataURL(image);
     };
 
-    function showAlert() {
-        invalid = true;
-        loading = false;
-    }
-
     function goBack() {
         window.history.back();
     }
 </script>
 
 <main transition:fly={{ y: 200, duration: 500 }}>
-    {#if loading}
-        <FullScreenLoader label="Verifying Credential..." />
-    {/if}
-
-    {#if !invalid && !loading}
-        <header>
-            <div class="options-wrapper">
-                <i on:click={goBack} class="icon-chevron" />
-                <p>Scanner</p>
-                <label class="image-select">
-                    <input type="file" accept="image/*" on:change={e => imageSelected(e)} />
-                    Browse
-                </label>
-            </div>
-        </header>
-        <Scanner on:message={handleScannerData} />
-    {/if}
+    <header>
+        <div class="options-wrapper">
+            <i on:click={goBack} class="icon-chevron" />
+            <p>Scanner</p>
+            <label class="image-select">
+                <input type="file" accept="image/*" on:change={e => imageSelected(e)} />
+                Browse
+            </label>
+        </div>
+    </header>
+    <Scanner on:message={handleScannerData} />
 </main>
 
 <style>

From 62cd6410ba42783793b421e95792084ed2fa395c Mon Sep 17 00:00:00 2001
From: Severin Skillman <severin.skillman@iota.org>
Date: Wed, 22 Dec 2021 13:57:52 +0100
Subject: [PATCH 2/8] extract scanner data handler into separate file for use
 in DataWedge flow

---
 .../holder-mobile-app/src/App.svelte          | 28 ++--------------
 .../holder-mobile-app/src/lib/scan.ts         | 33 +++++++++++++++++++
 .../src/pages/DeviceCredential.svelte         |  2 +-
 .../holder-mobile-app/src/pages/Scan.svelte   | 27 ++-------------
 4 files changed, 40 insertions(+), 50 deletions(-)
 create mode 100644 identity-enabler/holder-mobile-app/src/lib/scan.ts

diff --git a/identity-enabler/holder-mobile-app/src/App.svelte b/identity-enabler/holder-mobile-app/src/App.svelte
index 8b65a7b..cef3ed2 100644
--- a/identity-enabler/holder-mobile-app/src/App.svelte
+++ b/identity-enabler/holder-mobile-app/src/App.svelte
@@ -1,7 +1,7 @@
 <script lang="ts">
-    import { Router, Route, navigate } from "svelte-routing";
+    import { Router, Route } from "svelte-routing";
     import { onMount } from "svelte";
-    import { playAudio, showAlert } from "./lib/ui/helpers";
+    import { showAlert } from "./lib/ui/helpers";
     import Home from "./pages/Home.svelte";
     import { ServiceFactory } from "./factories/serviceFactory";
     import CreatePresentation from "./pages/CreatePresentation.svelte";
@@ -15,35 +15,13 @@
     import Modal from "./components/modal/Index.svelte";
     import { hasSetupAccount } from "./lib/store";
     import Keychain from "./lib/keychain";
-    import { parse } from "./lib/helpers";
     import type { IdentityService } from "./services/identityService";
     import InvalidCredential from "./pages/InvalidCredential.svelte";
+    import { handleScannerData } from "./lib/scan";
 
     let url = window.location.pathname;
     let displayHome = false;
 
-    // We delay playing the valid or invalid sound in order not to overlap
-    // with the scanning sound
-    const PLAY_DELAY = 400;
-
-    async function handleScannerData(text: string) {
-        try {
-            const parsedData = parse(text);
-            const claims = parsedData;
-
-            if (claims) {
-                setTimeout(async () => await playAudio("valid"), PLAY_DELAY);
-                navigate("/devicecredential", { state: { claims: claims } });
-            } else {
-                setTimeout(async () => await playAudio("invalid"), PLAY_DELAY);
-                await showAlert("Error", "Invalid Claims");
-            }
-        } catch (err) {
-            setTimeout(async () => await playAudio("invalid"), PLAY_DELAY);
-            console.error(err);
-        }
-    }
-
     /**
      * Function executed when a Zebra DataWedge scanning event happens
      *
diff --git a/identity-enabler/holder-mobile-app/src/lib/scan.ts b/identity-enabler/holder-mobile-app/src/lib/scan.ts
new file mode 100644
index 0000000..444035a
--- /dev/null
+++ b/identity-enabler/holder-mobile-app/src/lib/scan.ts
@@ -0,0 +1,33 @@
+import { navigate } from "svelte-routing";
+import { playAudio } from "./ui/helpers";
+
+// We delay playing the valid or invalid sound in order not to overlap
+// with the scanning sound
+const PLAY_DELAY = 400;
+
+/**
+ * Handles data string captured by Camera, DataWedge or Image selection.
+ *
+ * @param decodedText The decoded string to verify and persist.
+ * @returns Promise.
+ */
+export async function handleScannerData(decodedText: string): Promise<void> {
+    await playAudio("scanned");
+    let credentialSubject;
+
+    try {
+        credentialSubject = JSON.parse(decodedText);
+    } catch (err) {
+        console.error(err);
+        navigate("/invalid", { state: { message: "Invalid JSON" } });
+        return;
+    }
+
+    if (typeof credentialSubject?.id !== "string" || !credentialSubject.id.startsWith("did:iota:")) {
+        navigate("/invalid", { state: { message: "Missing subject ID" } });
+        return;
+    }
+
+    setTimeout(async () => await playAudio("valid"), PLAY_DELAY);
+    navigate("/devicecredential", { state: { credentialSubject } });
+}
diff --git a/identity-enabler/holder-mobile-app/src/pages/DeviceCredential.svelte b/identity-enabler/holder-mobile-app/src/pages/DeviceCredential.svelte
index f2cec4f..ff54471 100644
--- a/identity-enabler/holder-mobile-app/src/pages/DeviceCredential.svelte
+++ b/identity-enabler/holder-mobile-app/src/pages/DeviceCredential.svelte
@@ -30,7 +30,7 @@
         try {
             const storedIdentity = await identityService.retrieveIdentity();
             const subjectId = credentialSubject.id;
-            const claims = {...credentialSubject};
+            const claims = { ...credentialSubject };
             delete claims.id;
             const newCredential = await identityService.createSignedCredential(
                 subjectId,
diff --git a/identity-enabler/holder-mobile-app/src/pages/Scan.svelte b/identity-enabler/holder-mobile-app/src/pages/Scan.svelte
index bae77c4..16590ab 100644
--- a/identity-enabler/holder-mobile-app/src/pages/Scan.svelte
+++ b/identity-enabler/holder-mobile-app/src/pages/Scan.svelte
@@ -4,7 +4,7 @@
     import { __ANDROID__ } from "../lib/platforms";
     import Scanner from "../components/Scanner.svelte";
     import { BarcodeFormat, BrowserMultiFormatReader, DecodeHintType } from "@zxing/library";
-    import { playAudio } from "../lib/ui/helpers";
+    import { handleScannerData } from "../lib/scan";
 
     const formats = new Map().set(DecodeHintType.POSSIBLE_FORMATS, [BarcodeFormat.DATA_MATRIX, BarcodeFormat.QR_CODE]);
     const reader = new BrowserMultiFormatReader(formats);
@@ -13,27 +13,6 @@
     // with the scanning sound
     const PLAY_DELAY = 400;
 
-    async function handleScannerData(event) {
-        await playAudio("scanned");
-        let credentialSubject;
-
-        try {
-            credentialSubject = JSON.parse(event.detail);
-        } catch (err) {
-            console.error(err);
-            navigate("/invalid", { state: { message: "Invalid JSON" } });
-            return;
-        }
-
-        if (typeof credentialSubject?.id !== "string" || !credentialSubject.id.startsWith("did:iota:")) {
-            navigate("/invalid", { state: { message: "Missing subject ID" } });
-            return;
-        }
-
-        setTimeout(async () => await playAudio("valid"), PLAY_DELAY);
-        navigate("/devicecredential", { state: { credentialSubject } });
-    }
-
     // handles input button
     const imageSelected = e => {
         const image = e.currentTarget.files[0];
@@ -42,7 +21,7 @@
         fr.onload = (e: ProgressEvent<FileReader>) => {
             reader
                 .decodeFromImageUrl(e.target.result as string)
-                .then(result => handleScannerData({ detail: result.getText() }))
+                .then(result => handleScannerData(result.getText()))
                 .catch(e => {
                     console.error(e);
                     navigate("/invalid", { state: { message: "Failed to decode image" } });
@@ -67,7 +46,7 @@
             </label>
         </div>
     </header>
-    <Scanner on:message={handleScannerData} />
+    <Scanner on:message={ev => handleScannerData(ev.detail)} />
 </main>
 
 <style>

From ca855697d77222f9a20c82f90304940949ecbb31 Mon Sep 17 00:00:00 2001
From: Severin Skillman <severin.skillman@iota.org>
Date: Wed, 22 Dec 2021 15:24:07 +0100
Subject: [PATCH 3/8] harmonised FullScreenLoader and InvalidCredential in 
 device id app

---
 .../deviceId-mobile-app/src/App.svelte        |  50 ++-----
 .../src/components/FullScreenLoader.svelte    |  20 ++-
 .../deviceId-mobile-app/src/lib/scan.ts       |  74 ++++++++++
 .../deviceId-mobile-app/src/lib/store.ts      |  19 +--
 .../src/pages/CreatePresentation.svelte       |  49 +++----
 .../src/pages/CreateQR.svelte                 |  67 ++++-----
 .../src/pages/DevInfo.svelte                  |  58 ++++----
 .../deviceId-mobile-app/src/pages/Home.svelte |   9 +-
 .../InvalidCredential.svelte                  |  26 +++-
 .../deviceId-mobile-app/src/pages/Name.svelte |  60 ++++----
 .../deviceId-mobile-app/src/pages/Scan.svelte | 135 +++---------------
 11 files changed, 238 insertions(+), 329 deletions(-)
 create mode 100644 identity-enabler/deviceId-mobile-app/src/lib/scan.ts
 rename identity-enabler/deviceId-mobile-app/src/{components => pages}/InvalidCredential.svelte (60%)

diff --git a/identity-enabler/deviceId-mobile-app/src/App.svelte b/identity-enabler/deviceId-mobile-app/src/App.svelte
index cd37227..d93febb 100644
--- a/identity-enabler/deviceId-mobile-app/src/App.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/App.svelte
@@ -1,5 +1,5 @@
 <script lang="ts">
-    import { Router, Route, navigate } from "svelte-routing";
+    import { Router, Route } from "svelte-routing";
     import { onMount } from "svelte";
     import Home from "./pages/Home.svelte";
     import { ServiceFactory } from "./factories/serviceFactory";
@@ -13,50 +13,17 @@
     import Modal from "./components/modal/Index.svelte";
     import Scan from "./pages/Scan.svelte";
     import RequestCredential from "./pages/RequestCredential.svelte";
-    import { hasSetupAccount } from "./lib/store";
+    import { hasSetupAccount, loadingScreen } from "./lib/store";
     import Keychain from "./lib/keychain";
     import { playAudio, showAlert } from "./lib/ui/helpers";
-    import { parse } from "./lib/helpers";
     import type { IdentityService } from "./services/identityService";
-    import { Toast } from "@capacitor/core";
+    import InvalidCredential from "./pages/InvalidCredential.svelte";
+    import FullScreenLoader from "./components/FullScreenLoader.svelte";
+    import { handleScannerData } from "./lib/scan";
 
     let url = window.location.pathname;
     let displayHome = false;
 
-    async function handleScannerData(text: string) {
-        let credential = parse(text);
-
-        if (!credential) {
-            await playAudio("invalid");
-
-            await showAlert("Error", "Invalid Credential Received");
-            return;
-        }
-
-        let verificationResult;
-        const identityService = ServiceFactory.get<IdentityService>("identity");
-        try {
-            verificationResult = await identityService.verifyVerifiablePresentation(credential);
-        } catch (error) {
-            await playAudio("invalid");
-            console.error(error);
-            return;
-        }
-
-        if (verificationResult) {
-            await playAudio("valid");
-
-            await Toast.show({
-                text: "Credential verified!",
-                position: "center"
-            });
-            navigate("/credential", { state: { credential, save: true } });
-        } else {
-            await playAudio("invalid");
-            await showAlert("Error", "Invalid Credential Received");
-        }
-    }
-
     /**
      * Function executed when a Zebra DataWedge scanning event happens
      *
@@ -74,7 +41,8 @@
             await showAlert("Error", "You need Internet connectivity to verify your credential");
             return;
         }
-        await handleScannerData(decodedText);
+
+        await handleScannerData(decodedText, "DataWedge");
     }
 
     onMount(async () => {
@@ -95,6 +63,9 @@
 </script>
 
 <main>
+    {#if $loadingScreen}
+        <FullScreenLoader label={$loadingScreen} />
+    {/if}
     <Router {url}>
         <div>
             {#if !$hasSetupAccount}
@@ -111,6 +82,7 @@
             <Route path="/createQR" component={CreateQR} />
             <Route path="/scan" component={Scan} />
             <Route path="/createPresentation" component={CreatePresentation} />
+            <Route path="/invalid" component={InvalidCredential} />
         </div>
     </Router>
     <Modal>
diff --git a/identity-enabler/deviceId-mobile-app/src/components/FullScreenLoader.svelte b/identity-enabler/deviceId-mobile-app/src/components/FullScreenLoader.svelte
index 0cf9233..8014bcd 100644
--- a/identity-enabler/deviceId-mobile-app/src/components/FullScreenLoader.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/components/FullScreenLoader.svelte
@@ -4,21 +4,27 @@
     export let label;
 </script>
 
-<div class="loader-wrapper">
-    <Spinner />
-    <div class="loader-label">{label}</div>
-</div>
+<main>
+    <div class="loader-wrapper">
+        <Spinner />
+        <div class="loader-label">{label ?? "Loading..."}</div>
+    </div>
+</main>
 
 <style>
-    .loader-wrapper {
+    main {
+        position: absolute;
+        background: #aee693;
         height: 100%;
         width: 100%;
+        z-index: 10;
+    }
+    .loader-wrapper {
+        height: inherit;
         display: flex;
         flex-direction: column;
         align-items: center;
         justify-content: center;
-        row-gap: 40px;
-        background-color: #aee693;
     }
     .loader-label {
         font-family: "Proxima Nova", sans-serif;
diff --git a/identity-enabler/deviceId-mobile-app/src/lib/scan.ts b/identity-enabler/deviceId-mobile-app/src/lib/scan.ts
new file mode 100644
index 0000000..ae36856
--- /dev/null
+++ b/identity-enabler/deviceId-mobile-app/src/lib/scan.ts
@@ -0,0 +1,74 @@
+import { navigate } from "svelte-routing";
+import { ServiceFactory } from "../factories/serviceFactory";
+import type { IdentityService } from "../services/identityService";
+import { loadingScreen } from "./store";
+import { playAudio } from "./ui/helpers";
+import { Plugins } from "@capacitor/core";
+
+/**
+ * Handles data string captured by Camera, DataWedge or Image selection.
+ *
+ * @param decodedText The decoded string to verify and persist.
+ * @param method How the code was decoded.
+ * @returns Promise.
+ */
+export async function handleScannerData(decodedText: string, method: "Camera" | "File" | "DataWedge"): Promise<void> {
+    loadingScreen.set("Validating Credential...");
+    let scanSoundStart: number;
+
+    if (method !== "DataWedge") {
+        await playAudio("scanned");
+        scanSoundStart = Date.now();
+    }
+
+    let vp;
+    try {
+        vp = JSON.parse(decodedText);
+    } catch (e) {
+        console.error(e);
+        loadingScreen.set();
+        navigate("/invalid", { state: { scanSoundStart, message: "Invalid JSON" } });
+        return;
+    }
+
+    if (!vp) {
+        loadingScreen.set();
+        navigate("/invalid", { state: { scanSoundStart } });
+        return;
+    }
+
+    const identityService = ServiceFactory.get<IdentityService>("identity");
+    const identity = await identityService.retrieveIdentity();
+
+    const credentialSubjectId = vp.verifiableCredential?.credentialSubject?.id;
+    if (credentialSubjectId === undefined) {
+        loadingScreen.set();
+        navigate("/invalid", { state: { scanSoundStart } });
+        return;
+    }
+
+    const id = JSON.parse(identity.didDoc).id;
+    if (id !== credentialSubjectId) {
+        // check that this VP/VC is for the current device
+        loadingScreen.set();
+        navigate("/invalid", { state: { scanSoundStart, message: "Incorrect credential subject" } });
+        return;
+    }
+
+    loadingScreen.set("Verifying Credential...");
+    const verificationResult = await identityService.verifyVerifiablePresentation(vp);
+
+    if (!verificationResult) {
+        loadingScreen.set();
+        navigate("/invalid", { state: { scanSoundStart } });
+        return;
+    }
+
+    await playAudio("valid");
+    await Plugins.Toast.show({
+        text: "Credential verified!",
+        position: "center"
+    });
+    loadingScreen.set();
+    navigate("credential", { state: { credential: vp, save: true } });
+}
diff --git a/identity-enabler/deviceId-mobile-app/src/lib/store.ts b/identity-enabler/deviceId-mobile-app/src/lib/store.ts
index ea7a65e..2f209f2 100644
--- a/identity-enabler/deviceId-mobile-app/src/lib/store.ts
+++ b/identity-enabler/deviceId-mobile-app/src/lib/store.ts
@@ -68,27 +68,12 @@ export interface InternalCredentialDataModel {
     credentialDocument: any;
 }
 
-const errorInitialState = null;
-/**
- * Error string
- */
-export const error = writable<string>(errorInitialState);
-
-let errorTimeout: any;
-
-error.subscribe(item => {
-    clearTimeout(errorTimeout);
-    if (item) {
-        errorTimeout = setTimeout(() => {
-            error.set(null);
-        }, 3500);
-    }
-});
+export const loadingScreen = writable<string | void>();
 
 export function resetAllStores() {
     hasSetupAccount.set(hasSetupAccountInitialState);
     credentials.set(credentialsInitialState);
     account.set(accountInitialState);
     modalStatus.set(modalStatusInitialState);
-    error.set(errorInitialState);
+    loadingScreen.set();
 }
diff --git a/identity-enabler/deviceId-mobile-app/src/pages/CreatePresentation.svelte b/identity-enabler/deviceId-mobile-app/src/pages/CreatePresentation.svelte
index 131fff0..bc023a9 100644
--- a/identity-enabler/deviceId-mobile-app/src/pages/CreatePresentation.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/pages/CreatePresentation.svelte
@@ -1,12 +1,11 @@
 <script>
     import { onMount } from "svelte";
     import bwipjs from "bwip-js";
-    import FullScreenLoader from "../components/FullScreenLoader.svelte";
     import { wait } from "../lib/helpers";
     import DevInfo from "./DevInfo.svelte";
     import PresentationJson from "./PresentationJSON.svelte";
+    import { loadingScreen } from "../lib/store";
 
-    let loading = true;
     let showJSON = false;
     let showTutorial = false;
     let singleTapped = false;
@@ -15,7 +14,7 @@
     const credential = window.history.state.credential;
 
     function createMatrix() {
-        loading = true;
+        loadingScreen.set("Generating DataMatrix...");
         try {
             // The return value is the canvas element
             bwipjs.toCanvas("presentation", {
@@ -28,7 +27,7 @@
         } catch (e) {
             console.error(e);
         }
-        loading = false;
+        loadingScreen.set();
     }
 
     const addDaysToDate = (date, days) => {
@@ -70,31 +69,24 @@
         <PresentationJson code={JSON.stringify(credential, null, 2)} bind:showJSON />
     {/if}
 
-    {#if loading}
-        <FullScreenLoader label="Creating Data Matrix..." />
-    {/if}
-    <div class={loading ? "wrapper mini" : "wrapper"}>
-        {#if !loading}
-            <div class="options-wrapper">
-                <i on:click={goBack} class="icon-chevron" />
-                <i on:click={onClickDev} class="icon-code" />
-            </div>
-            <div class="header">
-                <i class="icon-credential credential-logo" />
-                <header>
-                    <span>Device {credential?.verifiableCredential?.credentialSubject?.DeviceData["Device Name"]}</span>
-                    <p>{credential?.metaInformation?.issuer ?? "No issuer information"}</p>
-                </header>
-            </div>
-        {/if}
+    <div class="wrapper">
+        <div class="options-wrapper">
+            <i on:click={goBack} class="icon-chevron" />
+            <i on:click={onClickDev} class="icon-code" />
+        </div>
+        <div class="header">
+            <i class="icon-credential credential-logo" />
+            <header>
+                <span>Device {credential?.verifiableCredential?.credentialSubject?.DeviceData["Device Name"]}</span>
+                <p>{credential?.metaInformation?.issuer ?? "No issuer information"}</p>
+            </header>
+        </div>
         <div class="presentation-wrapper">
             <canvas id="presentation" on:click={onClickDataMatrix} />
         </div>
-        {#if !loading}
-            <footer class="footerContainer">
-                <p>Valid until {addDaysToDate(credential?.verifiableCredential?.issuanceDate, 30)}</p>
-            </footer>
-        {/if}
+        <footer class="footerContainer">
+            <p>Valid until {addDaysToDate(credential?.verifiableCredential?.issuanceDate, 30)}</p>
+        </footer>
     </div>
 </main>
 
@@ -115,11 +107,6 @@
         z-index: 5;
     }
 
-    .mini {
-        width: 0px;
-        height: 0px;
-    }
-
     header > p {
         margin: 2vh 0;
         font-family: "Proxima Nova", sans-serif;
diff --git a/identity-enabler/deviceId-mobile-app/src/pages/CreateQR.svelte b/identity-enabler/deviceId-mobile-app/src/pages/CreateQR.svelte
index 908ace1..aa7fbb8 100644
--- a/identity-enabler/deviceId-mobile-app/src/pages/CreateQR.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/pages/CreateQR.svelte
@@ -5,7 +5,6 @@
     import { Plugins } from "@capacitor/core";
     import bwipjs from "bwip-js";
     import { ServiceFactory } from "../factories/serviceFactory";
-    import FullScreenLoader from "../components/FullScreenLoader.svelte";
     import Button from "../components/Button.svelte";
     import { showAlert } from "../lib/ui/helpers";
 
@@ -14,11 +13,10 @@
     const identityService = ServiceFactory.get("identity");
     const name = window.history.state.name;
 
-    let loading = false;
-
     onMount(async () => {
+        loadingScreen.set("Generating QR Code...");
+
         try {
-            loading = true;
             const storedIdentity = await identityService.retrieveIdentity();
             const deviceInfo = await Device.getInfo();
             const credentialSubject = {
@@ -30,12 +28,12 @@
                 osVersion: deviceInfo.osVersion
             };
             await createMatrix(JSON.stringify(credentialSubject));
-            loading = false;
         } catch (err) {
             await showAlert("Error", err.message);
             console.error(err);
-            loading = false;
         }
+
+        loadingScreen.set();
     });
 
     async function createMatrix(content) {
@@ -63,41 +61,29 @@
 </script>
 
 <main>
-    {#if loading}
-        <FullScreenLoader label="Creating QR Code..." />
-    {/if}
-
-    <div class={loading ? "wrapper mini" : "wrapper"} transition:fly={{ x: 500, duration: 500 }}>
-        {#if !loading}
-            <header>
-                <i on:click={goBack} class="icon-chevron" />
-                <p>Request Device DID credential</p>
-            </header>
-
-            <div class="subheader">
-                <p>Share device claims with the Organization ID holder app</p>
-            </div>
-        {/if}
-
+    <div class="wrapper" transition:fly={{ x: 500, duration: 500 }}>
+        <header>
+            <i on:click={goBack} class="icon-chevron" />
+            <p>Request Device DID credential</p>
+        </header>
+        <div class="subheader">
+            <p>Share device claims with the Organization ID holder app</p>
+        </div>
         <div class="qr-wrapper">
             <canvas id="device-claims" />
         </div>
-
-        {#if !loading}
-            <div class="info">
-                <pre>Scan this QR code with the Holder app
-                    to continue</pre>
-            </div>
-
-            <footer>
-                <Button
-                    style="height: 64px;"
-                    loadingText={"Generating identity"}
-                    label="Next"
-                    onClick={requestCredential}
-                />
-            </footer>
-        {/if}
+        <div class="info">
+            <pre>Scan this QR code with the Holder app
+                to continue</pre>
+        </div>
+        <footer>
+            <Button
+                style="height: 64px;"
+                loadingText={"Generating identity"}
+                label="Next"
+                onClick={requestCredential}
+            />
+        </footer>
     </div>
 </main>
 
@@ -139,11 +125,6 @@
         margin: 7vh 0 9vh 0;
     }
 
-    .mini {
-        width: 0px;
-        height: 0px;
-    }
-
     .wrapper {
         text-align: center;
     }
diff --git a/identity-enabler/deviceId-mobile-app/src/pages/DevInfo.svelte b/identity-enabler/deviceId-mobile-app/src/pages/DevInfo.svelte
index d423e63..fb1b603 100644
--- a/identity-enabler/deviceId-mobile-app/src/pages/DevInfo.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/pages/DevInfo.svelte
@@ -1,25 +1,27 @@
 <script lang="ts">
     import { onMount } from "svelte";
-    import FullScreenLoader from "../components/FullScreenLoader.svelte";
     import Markdown from "../components/Markdown.svelte";
     import { getMarkdownContent } from "../lib/helpers";
     import { TUTORIAL_BASE_URL } from "../config";
-    import { error } from "../lib/store";
+    import { loadingScreen } from "../lib/store";
+    import { showAlert } from "../lib/ui/helpers";
 
     export let page = "";
     export let showTutorial: boolean;
 
-    let loading = true;
     let code = "";
 
     onMount(async () => {
+        loadingScreen.set("Loading Tutorial...");
+
         try {
             code = await getMarkdownContent(`${TUTORIAL_BASE_URL}/${page}.md`);
-            loading = false;
         } catch (err) {
-            error.set("Error getting markdown file. Please try again.");
-            loading = false;
+            console.error(err);
+            await showAlert("Error", "Error fetching tutorial");
         }
+
+        loadingScreen.set();
     });
 
     function onClose() {
@@ -28,32 +30,26 @@
 </script>
 
 <main>
-    {#if loading}
-        <FullScreenLoader label="Loading..." />
-    {/if}
-
-    {#if !loading}
-        <div class="header-wrapper">
-            <span>{page.toUpperCase()}</span>
-            <i on:click={onClose} class="icon-cross" />
+    <div class="header-wrapper">
+        <span>{page.toUpperCase()}</span>
+        <i on:click={onClose} class="icon-cross" />
+    </div>
+    <section>
+        <div class="box-wrapper">
+            <span style="font-weight: 600;"
+                >This app doesn’t support adding a new credential, but here’s how it works.</span
+            >
+        </div>
+        <p>
+            In the IOTA Identity framework, we have implemented the DID standard according to the iota DID Method
+            Specification, which can be viewed here.
+            <br /><br />
+            An example of DID conforming to the IOTA method specification:
+        </p>
+        <div class="highlightjs-component">
+            <Markdown markdown={code} language="javascript" />
         </div>
-        <section>
-            <div class="box-wrapper">
-                <span style="font-weight: 600;"
-                    >This app doesn’t support adding a new credential, but here’s how it works.</span
-                >
-            </div>
-            <p>
-                In the IOTA Identity framework, we have implemented the DID standard according to the iota DID Method
-                Specification, which can be viewed here.
-                <br /><br />
-                An example of DID conforming to the IOTA method specification:
-            </p>
-            <div class="highlightjs-component">
-                <Markdown markdown={code} language="javascript" />
-            </div>
-        </section>
-    {/if}
+    </section>
 </main>
 
 <style>
diff --git a/identity-enabler/deviceId-mobile-app/src/pages/Home.svelte b/identity-enabler/deviceId-mobile-app/src/pages/Home.svelte
index 40a0bd5..feb3039 100644
--- a/identity-enabler/deviceId-mobile-app/src/pages/Home.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/pages/Home.svelte
@@ -2,9 +2,7 @@
     import { Plugins } from "@capacitor/core";
     import { onMount } from "svelte";
     import { navigate } from "svelte-routing";
-    import Button from "../components/Button.svelte";
     import ListItem from "../components/ListItem.svelte";
-    import FullScreenLoader from "../components/FullScreenLoader.svelte";
     import DevInfo from "./DevInfo.svelte";
     import { getFromStorage, account, resetAllStores } from "../lib/store";
     import { ServiceFactory } from "../factories/serviceFactory";
@@ -16,7 +14,6 @@
 
     const { App, Toast, Modals } = Plugins;
 
-    let loading = false;
     let localCredentials = [];
     let exitOnBack = false;
 
@@ -88,11 +85,7 @@
         <DevInfo page="Identity" bind:showTutorial />
     {/if}
 
-    {#if loading}
-        <FullScreenLoader label="Loading Credential..." />
-    {/if}
-
-    {#if !loading && $account}
+    {#if $account}
         <header>
             <div class="options-wrapper">
                 <i on:click={onClickReset} class="icon-reset" />
diff --git a/identity-enabler/deviceId-mobile-app/src/components/InvalidCredential.svelte b/identity-enabler/deviceId-mobile-app/src/pages/InvalidCredential.svelte
similarity index 60%
rename from identity-enabler/deviceId-mobile-app/src/components/InvalidCredential.svelte
rename to identity-enabler/deviceId-mobile-app/src/pages/InvalidCredential.svelte
index fcf71cc..6c99c42 100644
--- a/identity-enabler/deviceId-mobile-app/src/components/InvalidCredential.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/pages/InvalidCredential.svelte
@@ -1,9 +1,26 @@
-<script>
+<script lang="ts">
+    import { onMount } from "svelte";
     import { fly } from "svelte/transition";
     import Button from "../components/Button.svelte";
+    import { playAudio } from "../lib/ui/helpers";
 
-    export let showInvalid = false;
-    export let message = "Invalid credential";
+    const PLAY_DELAY = 400;
+
+    const message = window.history?.state?.message || "Invalid credential";
+    const scanSoundStart = window.history?.state?.scanSoundStart;
+    onMount(async () => {
+        // We wait a little bit in order not to overlap the different aural feedback
+        const delay = scanSoundStart ? PLAY_DELAY - (Date.now() - scanSoundStart) : PLAY_DELAY;
+        if (delay < 0) {
+            await playAudio("invalid");
+        } else {
+            setTimeout(async () => await playAudio("invalid"), delay);
+        }
+    });
+
+    function onDone() {
+        window.history.back();
+    }
 </script>
 
 <main transition:fly={{ y: 200, duration: 500 }}>
@@ -12,7 +29,7 @@
         <p>{message}</p>
     </section>
     <footer>
-        <Button label="Done" onClick={() => (showInvalid = false)} />
+        <Button label="Done" onClick={onDone} />
     </footer>
 </main>
 
@@ -52,6 +69,7 @@
 
     .icon-cross {
         font-size: 64px;
+        color: white;
     }
 
     footer {
diff --git a/identity-enabler/deviceId-mobile-app/src/pages/Name.svelte b/identity-enabler/deviceId-mobile-app/src/pages/Name.svelte
index 3912084..3733093 100644
--- a/identity-enabler/deviceId-mobile-app/src/pages/Name.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/pages/Name.svelte
@@ -4,16 +4,12 @@
     import Button from "../components/Button.svelte";
     import TextField from "../components/TextField.svelte";
     import Header from "../components/Header.svelte";
-    import FullScreenLoader from "../components/FullScreenLoader.svelte";
     import { ServiceFactory } from "../factories/serviceFactory";
-    import { account, error, hasSetupAccount } from "../lib/store";
+    import { account, hasSetupAccount, loadingScreen } from "../lib/store";
     import { showAlert } from "../lib/ui/helpers";
 
     const { Keyboard } = Plugins;
-
     let name = "";
-    let loading = false;
-
     let background;
 
     function handleOuterClick() {
@@ -32,53 +28,45 @@
             return;
         }
 
-        if (loading) {
-            return;
-        }
-
         Keyboard.hide();
-
-        error.set(null);
-
         account.set({ name: name });
-
-        loading = true;
+        loadingScreen.set("Generating Identity...");
 
         try {
             const identityService = ServiceFactory.get("identity");
             const identity = await identityService.createIdentity();
             await identityService.storeIdentity("did", identity);
-            console.log("Identity", identity);
-            loading = false;
             hasSetupAccount.set(true);
-
             navigate("home");
         } catch (err) {
-            error.set("Error creating identity. Please try again.");
-            loading = false;
+            console.error(err);
+            await showAlert("Error", "Error creating identity. Please try again.");
         }
+
+        loadingScreen.set();
     }
 </script>
 
 <main bind:this={background} on:click={handleOuterClick}>
-    {#if loading}
-        <FullScreenLoader label="Creating Identity..." />
-    {:else}
-        <div class="content">
-            <div>
-                <Header text="Set the name of the device" />
-            </div>
-            <div>
-                <img src="/img/notepad.svg" alt="notepad" />
-            </div>
-            <div>
-                <TextField bind:value={name} placeholder="Device name" />
-            </div>
+    <div class="content">
+        <div>
+            <Header text="Set the name of the device" />
+        </div>
+        <div>
+            <img src="/img/notepad.svg" alt="notepad" />
+        </div>
+        <div>
+            <TextField bind:value={name} placeholder="Device name" />
         </div>
-        <footer>
-            <Button loadingText={"Generating identity"} disabled={name.length === 0} label="Next" onClick={save} />
-        </footer>
-    {/if}
+    </div>
+    <footer>
+        <Button
+            loadingText={"Generating identity"}
+            disabled={name.length === 0 || Boolean($loadingScreen)}
+            label="Next"
+            onClick={save}
+        />
+    </footer>
 </main>
 
 <style>
diff --git a/identity-enabler/deviceId-mobile-app/src/pages/Scan.svelte b/identity-enabler/deviceId-mobile-app/src/pages/Scan.svelte
index edc6d21..ff46730 100644
--- a/identity-enabler/deviceId-mobile-app/src/pages/Scan.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/pages/Scan.svelte
@@ -1,139 +1,48 @@
 <script lang="ts">
-    import { navigate } from "svelte-routing";
     import { fly } from "svelte/transition";
-    import { Plugins } from "@capacitor/core";
-    import { ServiceFactory } from "../factories/serviceFactory";
     import { __ANDROID__ } from "../lib/platforms";
     import Scanner from "../components/Scanner.svelte";
-    import InvalidCredential from "../components/InvalidCredential.svelte";
-    import FullScreenLoader from "../components/FullScreenLoader.svelte";
     import { BarcodeFormat, BrowserMultiFormatReader, DecodeHintType } from "@zxing/library";
-    import type { IdentityService } from "../services/identityService";
-    import { playAudio } from "../lib/ui/helpers";
-    import { onMount } from "svelte";
+    import { handleScannerData } from "../lib/scan";
+    import { navigate } from "svelte-routing";
 
-    // We delay playing the valid or invalid sound in order not to overlap
-    // with the scanning sound
-    const PLAY_DELAY = 400;
-    const { Toast, App } = Plugins;
     const formats = new Map().set(DecodeHintType.POSSIBLE_FORMATS, [BarcodeFormat.DATA_MATRIX, BarcodeFormat.QR_CODE]);
     const reader = new BrowserMultiFormatReader(formats);
 
-    let VP;
-    let showInvalid = false;
-    let invalidMessage: string;
-    let loading = false;
-
-    onMount(() => App.addListener("backButton", goBack).remove);
-
-    async function handleScannerData(event) {
-        await playAudio("scanned");
-        loading = true;
-        try {
-            VP = JSON.parse(event.detail);
-        } catch (e) {
-            console.error(e);
-            setTimeout(async () => await playAudio("invalid"), PLAY_DELAY);
-            return showAlert("Invalid JSON");
-        }
-
-        if (!VP) {
-            setTimeout(async () => await playAudio("invalid"), PLAY_DELAY);
-            return showAlert();
-        }
-
-        const identityService = ServiceFactory.get<IdentityService>("identity");
-        const identity = await identityService.retrieveIdentity();
-
-        const credentialSubjectId = VP.verifiableCredential?.credentialSubject?.id;
-        if (credentialSubjectId === undefined) {
-            await playAudio("invalid");
-            showAlert();
-            return;
-        }
-
-        const id = JSON.parse(identity.didDoc).id;
-        if (id !== credentialSubjectId) {
-            // check that this VP/VC is for the current device
-            await playAudio("invalid");
-            showAlert("Incorrect credential subject");
-            return;
-        }
-
-        const verificationResult = await identityService.verifyVerifiablePresentation(VP);
-
-        if (!verificationResult) {
-            await playAudio("invalid");
-            loading = false;
-            return showAlert();
-        }
-
-        await playAudio("valid");
-        showToast();
-        loading = false;
-        navigate("credential", { state: { credential: VP, save: true } });
-    }
-
     // handles input button
     const imageSelected = e => {
         const image = e.currentTarget.files[0];
         const fr = new FileReader();
-        fr.onload = (e: ProgressEvent<FileReader>) => {
-            reader
-                .decodeFromImageUrl(e.target.result as string)
-                .then(result => handleScannerData({ detail: result.getText() }))
-                .catch(async e => {
-                    console.error(e);
-                    await playAudio("invalid");
-                    showAlert("Failed to decode image");
-                });
+        fr.onload = async (e: ProgressEvent<FileReader>) => {
+            let result;
+            try {
+                result = await reader.decodeFromImageUrl(e.target.result as string);
+            } catch (e) {
+                console.error(e);
+                navigate("/invalid", { state: { message: "Failed to decode image" } });
+                return;
+            }
+
+            await handleScannerData(result.getText(), "File");
         };
         fr.readAsDataURL(image);
     };
 
-    async function showToast() {
-        await Toast.show({
-            text: "Credential verified!",
-            position: "center"
-        });
-    }
-
-    function showAlert(message = "Invalid credential") {
-        showInvalid = true;
-        invalidMessage = message;
-        loading = false;
-    }
-
     function goBack() {
-        if (showInvalid) {
-            showInvalid = false;
-            return;
-        }
-
         window.history.back();
     }
 </script>
 
 <main transition:fly={{ y: 200, duration: 500 }}>
-    {#if loading}
-        <FullScreenLoader label="Verifying Credential..." />
-    {/if}
-
-    {#if showInvalid && !loading}
-        <InvalidCredential bind:showInvalid message={invalidMessage} />
-    {/if}
-
-    {#if !showInvalid && !loading}
-        <header>
-            <i on:click={goBack} class="icon-chevron" />
-            <p>Scanner</p>
-            <label class="image-select">
-                <input type="file" accept="image/*" on:change={e => imageSelected(e)} />
-                Browse
-            </label>
-        </header>
-        <Scanner on:message={handleScannerData} />
-    {/if}
+    <header>
+        <i on:click={goBack} class="icon-chevron" />
+        <p>Scanner</p>
+        <label class="image-select">
+            <input type="file" accept="image/*" on:change={e => imageSelected(e)} />
+            Browse
+        </label>
+    </header>
+    <Scanner on:message={async ev => await handleScannerData(ev.detail, "Camera")} />
 </main>
 
 <style>

From 07f774db5137c52c92eec0979342a3e6d125c026 Mon Sep 17 00:00:00 2001
From: Severin Skillman <severin.skillman@iota.org>
Date: Wed, 22 Dec 2021 16:42:05 +0100
Subject: [PATCH 4/8] updated holder app components to be consistent with other
 apps

---
 .../holder-mobile-app/src/App.svelte          |  8 ++-
 .../src/components/FullScreenLoader.svelte    | 22 ++++---
 .../holder-mobile-app/src/lib/scan.ts         | 31 ++++++++--
 .../holder-mobile-app/src/lib/store.ts        | 19 +------
 .../src/pages/CreatePresentation.svelte       | 42 ++++++--------
 .../src/pages/DevInfo.svelte                  | 55 ++++++++----------
 .../src/pages/DeviceCredential.svelte         | 22 +++----
 .../holder-mobile-app/src/pages/Home.svelte   | 21 ++-----
 .../src/pages/InvalidCredential.svelte        | 18 ++++--
 .../holder-mobile-app/src/pages/Name.svelte   | 57 ++++++++-----------
 .../holder-mobile-app/src/pages/Scan.svelte   | 24 ++++----
 11 files changed, 151 insertions(+), 168 deletions(-)

diff --git a/identity-enabler/holder-mobile-app/src/App.svelte b/identity-enabler/holder-mobile-app/src/App.svelte
index cef3ed2..9eb4c8b 100644
--- a/identity-enabler/holder-mobile-app/src/App.svelte
+++ b/identity-enabler/holder-mobile-app/src/App.svelte
@@ -13,11 +13,12 @@
     import Scan from "./pages/Scan.svelte";
     import Content from "./components/modal/Content.svelte";
     import Modal from "./components/modal/Index.svelte";
-    import { hasSetupAccount } from "./lib/store";
+    import { hasSetupAccount, loadingScreen } from "./lib/store";
     import Keychain from "./lib/keychain";
     import type { IdentityService } from "./services/identityService";
     import InvalidCredential from "./pages/InvalidCredential.svelte";
     import { handleScannerData } from "./lib/scan";
+    import FullScreenLoader from "./components/FullScreenLoader.svelte";
 
     let url = window.location.pathname;
     let displayHome = false;
@@ -38,7 +39,7 @@
             return;
         }
 
-        await handleScannerData(decodedText);
+        await handleScannerData(decodedText, "DataWedge");
     }
 
     onMount(async () => {
@@ -59,6 +60,9 @@
 </script>
 
 <main>
+    {#if $loadingScreen}
+        <FullScreenLoader label={$loadingScreen} />
+    {/if}
     <Router {url}>
         <div>
             {#if !$hasSetupAccount}
diff --git a/identity-enabler/holder-mobile-app/src/components/FullScreenLoader.svelte b/identity-enabler/holder-mobile-app/src/components/FullScreenLoader.svelte
index 96f9d1e..f6e6a68 100644
--- a/identity-enabler/holder-mobile-app/src/components/FullScreenLoader.svelte
+++ b/identity-enabler/holder-mobile-app/src/components/FullScreenLoader.svelte
@@ -4,23 +4,27 @@
     export let label;
 </script>
 
-<div class="loader-wrapper">
-    <Spinner />
-    <div class="loader-label">{label}</div>
-</div>
+<main>
+    <div class="loader-wrapper">
+        <Spinner />
+        <div class="loader-label">{label}</div>
+    </div>
+</main>
 
 <style>
-    .loader-wrapper {
+    main {
         position: absolute;
+        background: #00a7ff;
         height: 100%;
         width: 100%;
+        z-index: 10;
+    }
+    .loader-wrapper {
+        height: inherit;
         display: flex;
         flex-direction: column;
         align-items: center;
         justify-content: center;
-        row-gap: 40px;
-        background-color: #00a7ff;
-        z-index: 10;
     }
     .loader-label {
         font-family: "Proxima Nova", sans-serif;
@@ -31,7 +35,7 @@
         text-align: center;
         letter-spacing: 0.06em;
         text-transform: uppercase;
-        color: #f8f8f8;
+        color: white;
         margin-top: 40px;
     }
 </style>
diff --git a/identity-enabler/holder-mobile-app/src/lib/scan.ts b/identity-enabler/holder-mobile-app/src/lib/scan.ts
index 444035a..80f1078 100644
--- a/identity-enabler/holder-mobile-app/src/lib/scan.ts
+++ b/identity-enabler/holder-mobile-app/src/lib/scan.ts
@@ -1,4 +1,6 @@
 import { navigate } from "svelte-routing";
+import { wait } from "./helpers";
+import { loadingScreen } from "./store";
 import { playAudio } from "./ui/helpers";
 
 // We delay playing the valid or invalid sound in order not to overlap
@@ -9,25 +11,46 @@ const PLAY_DELAY = 400;
  * Handles data string captured by Camera, DataWedge or Image selection.
  *
  * @param decodedText The decoded string to verify and persist.
+ * @param method How the code was decoded.
  * @returns Promise.
  */
-export async function handleScannerData(decodedText: string): Promise<void> {
-    await playAudio("scanned");
+export async function handleScannerData(decodedText: string, method: "Camera" | "File" | "DataWedge"): Promise<void> {
+    loadingScreen.set("Validating Claims...");
+    let scanSoundStart: number;
+
+    if (method !== "DataWedge") {
+        await playAudio("scanned");
+        scanSoundStart = Date.now();
+    }
+
     let credentialSubject;
 
     try {
         credentialSubject = JSON.parse(decodedText);
     } catch (err) {
         console.error(err);
-        navigate("/invalid", { state: { message: "Invalid JSON" } });
+        await handleError("Invalid JSON", scanSoundStart);
         return;
     }
 
     if (typeof credentialSubject?.id !== "string" || !credentialSubject.id.startsWith("did:iota:")) {
-        navigate("/invalid", { state: { message: "Missing subject ID" } });
+        await handleError("Missing subject ID", scanSoundStart);
         return;
     }
 
     setTimeout(async () => await playAudio("valid"), PLAY_DELAY);
+    loadingScreen.set();
     navigate("/devicecredential", { state: { credentialSubject } });
 }
+
+async function handleError(message: string, scanSoundStart?: number) {
+    loadingScreen.set();
+
+    if (window.location.pathname === "/invalid") {
+        // workaround to ensure InvalidCredentialPage remounts
+        window.history.back();
+        await wait(550);
+    }
+
+    navigate("/invalid", { state: { scanSoundStart, message } });
+}
diff --git a/identity-enabler/holder-mobile-app/src/lib/store.ts b/identity-enabler/holder-mobile-app/src/lib/store.ts
index 38af769..7f021a2 100644
--- a/identity-enabler/holder-mobile-app/src/lib/store.ts
+++ b/identity-enabler/holder-mobile-app/src/lib/store.ts
@@ -117,22 +117,7 @@ storedCredentials.subscribe(value => {
     });
 });
 
-const errorInitialState = null;
-/**
- * Error string
- */
-export const error = writable<string>(errorInitialState);
-
-let errorTimeout: any;
-
-error.subscribe(item => {
-    clearTimeout(errorTimeout);
-    if (item) {
-        errorTimeout = setTimeout(() => {
-            error.set(null);
-        }, 3500);
-    }
-});
+export const loadingScreen = writable<string | void>();
 
 export function resetAllStores() {
     hasSetupAccount.set(hasSetupAccountInitialState);
@@ -142,5 +127,5 @@ export function resetAllStores() {
     modalStatus.set(modalStatusInitialState);
     landingIndex.set(landingIndexInitialState);
     storedCredentials.set(storedCredentialsInitialState);
-    error.set(errorInitialState);
+    loadingScreen.set();
 }
diff --git a/identity-enabler/holder-mobile-app/src/pages/CreatePresentation.svelte b/identity-enabler/holder-mobile-app/src/pages/CreatePresentation.svelte
index 3176883..417d712 100644
--- a/identity-enabler/holder-mobile-app/src/pages/CreatePresentation.svelte
+++ b/identity-enabler/holder-mobile-app/src/pages/CreatePresentation.svelte
@@ -2,16 +2,15 @@
     import { onMount } from "svelte";
     import bwipjs from "bwip-js";
     import { ServiceFactory } from "../factories/serviceFactory";
-    import { error } from "../lib/store";
-    import FullScreenLoader from "../components/FullScreenLoader.svelte";
+    import { loadingScreen } from "../lib/store";
     import { wait } from "../lib/helpers";
     import DevInfo from "./DevInfo.svelte";
     import PresentationJson from "./PresentationJSON.svelte";
     import { Plugins } from "@capacitor/core";
+    import { showAlert } from "../lib/ui/helpers";
 
     const { App } = Plugins;
     let presentationJSON = "";
-    let loading = true;
     let showJSON = false;
     let showTutorial = false;
     let singleTapped = false;
@@ -43,23 +42,22 @@
         return res.toLocaleDateString("en-US", dateOptions);
     };
 
-    onMount(() => {
-        setTimeout(async () => {
-            error.set(null);
-            try {
-                const storedIdentity = await identityService.retrieveIdentity();
-                const verifiablePresentation = await identityService.createVerifiablePresentation(
-                    storedIdentity,
-                    credential?.credentialDocument
-                );
-                presentationJSON = JSON.stringify(verifiablePresentation, null, 2);
-                createMatrix(JSON.stringify(verifiablePresentation));
-                loading = false;
-            } catch (err) {
-                error.set("Error creating identity. Please try again.");
-                loading = false;
-            }
-        }, 500);
+    onMount(async () => {
+        loadingScreen.set("Generating DataMatrix...");
+
+        try {
+            const storedIdentity = await identityService.retrieveIdentity();
+            const verifiablePresentation = await identityService.createVerifiablePresentation(
+                storedIdentity,
+                credential?.credentialDocument
+            );
+            presentationJSON = JSON.stringify(verifiablePresentation, null, 2);
+            createMatrix(JSON.stringify(verifiablePresentation));
+        } catch (err) {
+            await showAlert("Error", "Error creating DataMatrix. Please try again.");
+        }
+
+        loadingScreen.set();
     });
 
     function goBack() {
@@ -102,10 +100,6 @@
         <PresentationJson code={presentationJSON} bind:showJSON />
     {/if}
 
-    {#if loading}
-        <FullScreenLoader label="Creating Data Matrix..." />
-    {/if}
-
     <div class="wrapper">
         <div class="options-wrapper">
             <i on:click={goBack} class="icon-chevron" />
diff --git a/identity-enabler/holder-mobile-app/src/pages/DevInfo.svelte b/identity-enabler/holder-mobile-app/src/pages/DevInfo.svelte
index 35116c1..4293f60 100644
--- a/identity-enabler/holder-mobile-app/src/pages/DevInfo.svelte
+++ b/identity-enabler/holder-mobile-app/src/pages/DevInfo.svelte
@@ -1,25 +1,24 @@
 <script lang="ts">
     import { onMount } from "svelte";
-    import FullScreenLoader from "../components/FullScreenLoader.svelte";
     import Markdown from "../components/Markdown.svelte";
     import { getMarkdownContent } from "../lib/helpers";
     import { TUTORIAL_BASE_URL } from "../config";
-    import { error } from "../lib/store";
+    import { loadingScreen } from "../lib/store";
+    import { showAlert } from "../lib/ui/helpers";
 
     export let page = "";
     export let showTutorial: boolean;
 
-    let loading = true;
     let code = "";
 
     onMount(async () => {
+        loadingScreen.set("Loading...");
         try {
             code = await getMarkdownContent(`${TUTORIAL_BASE_URL}/${page}.md`);
-            loading = false;
         } catch (err) {
-            error.set("Error getting markdown file. Please try again.");
-            loading = false;
+            await showAlert("Error", "Error getting tutorial. Please try again.");
         }
+        loadingScreen.set();
     });
 
     function onClose() {
@@ -28,32 +27,26 @@
 </script>
 
 <main>
-    {#if loading}
-        <FullScreenLoader label="Loading..." />
-    {/if}
-
-    {#if !loading}
-        <div class="header-wrapper">
-            <span>{page.toUpperCase()}</span>
-            <i on:click={onClose} class="icon-cross" />
+    <div class="header-wrapper">
+        <span>{page.toUpperCase()}</span>
+        <i on:click={onClose} class="icon-cross" />
+    </div>
+    <section>
+        <div class="box-wrapper">
+            <span style="font-weight: 600;"
+                >This app doesn’t support adding a new credential, but here’s how it works.</span
+            >
+        </div>
+        <p>
+            In the IOTA Identity framework, we have implemented the DID standard according to the iota DID Method
+            Specification, which can be viewed here.
+            <br /><br />
+            An example of DID conforming to the IOTA method specification:
+        </p>
+        <div class="highlightjs-component">
+            <Markdown markdown={code} language="javascript" />
         </div>
-        <section>
-            <div class="box-wrapper">
-                <span style="font-weight: 600;"
-                    >This app doesn’t support adding a new credential, but here’s how it works.</span
-                >
-            </div>
-            <p>
-                In the IOTA Identity framework, we have implemented the DID standard according to the iota DID Method
-                Specification, which can be viewed here.
-                <br /><br />
-                An example of DID conforming to the IOTA method specification:
-            </p>
-            <div class="highlightjs-component">
-                <Markdown markdown={code} language="javascript" />
-            </div>
-        </section>
-    {/if}
+    </section>
 </main>
 
 <style>
diff --git a/identity-enabler/holder-mobile-app/src/pages/DeviceCredential.svelte b/identity-enabler/holder-mobile-app/src/pages/DeviceCredential.svelte
index ff54471..19b2446 100644
--- a/identity-enabler/holder-mobile-app/src/pages/DeviceCredential.svelte
+++ b/identity-enabler/holder-mobile-app/src/pages/DeviceCredential.svelte
@@ -1,11 +1,10 @@
 <script>
     import { navigate } from "svelte-routing";
-    import { error } from "../lib/store";
+    import { loadingScreen } from "../lib/store";
     import { CredentialType } from "../schemas";
     import { ServiceFactory } from "../factories/serviceFactory";
     import { generateRandomId } from "../lib/helpers";
     import { showAlert } from "../lib/ui/helpers";
-    import FullScreenLoader from "../components/FullScreenLoader.svelte";
     import Button from "../components/Button.svelte";
     import ObjectList from "../components/ObjectList.svelte";
     import DevInfo from "./DevInfo.svelte";
@@ -14,7 +13,6 @@
 
     const { App } = Plugins;
     let showTutorial = false;
-    let loading = false;
 
     const credentialSubject = window.history.state.credentialSubject;
 
@@ -24,9 +22,9 @@
             return;
         }
 
-        loading = true;
+        loadingScreen.set("Generating Credential...");
         const identityService = ServiceFactory.get("identity");
-        error.set(null);
+
         try {
             const storedIdentity = await identityService.retrieveIdentity();
             const subjectId = credentialSubject.id;
@@ -46,11 +44,11 @@
                 id: credentialId,
                 enrichment
             };
-            loading = false;
+            loadingScreen.set();
             navigate("/createPresentation", { state: { credential } });
         } catch (err) {
-            error.set("Error creating credential. Please try again.");
-            loading = false;
+            loadingScreen.set();
+            await showAlert("Error", "Error creating credential. Please try again.");
         }
     }
 
@@ -71,15 +69,11 @@
 </script>
 
 <main>
-    {#if loading}
-        <FullScreenLoader label="Loading Credential..." />
-    {/if}
-
-    {#if !loading && showTutorial}
+    {#if showTutorial}
         <DevInfo page="Credential" bind:showTutorial />
     {/if}
 
-    {#if !loading && !showTutorial}
+    {#if !showTutorial}
         <div class="header-wrapper">
             <div class="options-wrapper">
                 <i on:click={goBack} class="icon-chevron" />
diff --git a/identity-enabler/holder-mobile-app/src/pages/Home.svelte b/identity-enabler/holder-mobile-app/src/pages/Home.svelte
index ff88517..48025e7 100644
--- a/identity-enabler/holder-mobile-app/src/pages/Home.svelte
+++ b/identity-enabler/holder-mobile-app/src/pages/Home.svelte
@@ -5,12 +5,11 @@
     import { navigate } from "svelte-routing";
     import Button from "../components/Button.svelte";
     import ListItem from "../components/ListItem.svelte";
-    import FullScreenLoader from "../components/FullScreenLoader.svelte";
     import DevInfo from "./DevInfo.svelte";
     import { credentialPayload } from "../lib/credentialPayload";
     import { ServiceFactory } from "../factories/serviceFactory";
     import { CredentialType } from "../schemas";
-    import { updateStorage, getFromStorage, account, resetAllStores } from "../lib/store";
+    import { updateStorage, getFromStorage, account, resetAllStores, loadingScreen } from "../lib/store";
     import { getRandomUserData, generateRandomId, wait } from "../lib/helpers";
     import type { IdentityService } from "../services/identityService";
     import { showAlert } from "../lib/ui/helpers";
@@ -20,7 +19,6 @@
 
     const { App, Toast, Modals } = Plugins;
 
-    let loading = false;
     let localCredentials = [];
     let exitOnBack = false;
 
@@ -62,10 +60,8 @@
             return;
         }
 
-        if (loading) {
-            return;
-        }
-        loading = true;
+        loadingScreen.set("Generating Credential...");
+
         try {
             const identityService = ServiceFactory.get<IdentityService>("identity");
             const storedIdentity = await identityService.retrieveIdentity();
@@ -121,11 +117,10 @@
             console.log("new credential", credential);
             await updateStorage("credentials", { [credentialKey]: credential });
             localCredentials.push(credential);
-
-            loading = false;
+            loadingScreen.set();
         } catch (err) {
-            loading = false;
             console.log(err);
+            loadingScreen.set();
             await showAlert("Error", err.name);
         }
     }
@@ -166,11 +161,7 @@
         <DevInfo page="Identity" bind:showTutorial />
     {/if}
 
-    {#if loading}
-        <FullScreenLoader label="Loading Credential..." />
-    {/if}
-
-    {#if !loading && $account}
+    {#if $account}
         <header>
             <div class="options-wrapper">
                 <i on:click={onClickReset} class="icon-reset" />
diff --git a/identity-enabler/holder-mobile-app/src/pages/InvalidCredential.svelte b/identity-enabler/holder-mobile-app/src/pages/InvalidCredential.svelte
index 7c8380d..99386c0 100644
--- a/identity-enabler/holder-mobile-app/src/pages/InvalidCredential.svelte
+++ b/identity-enabler/holder-mobile-app/src/pages/InvalidCredential.svelte
@@ -4,11 +4,19 @@
     import Button from "../components/Button.svelte";
     import { playAudio } from "../lib/ui/helpers";
 
-    const message = window.history?.state?.message;
-    const PLAY_DELAY = 500;
-    onMount(() => {
+    const PLAY_DELAY = 400;
+
+    const message = window.history?.state?.message || "Invalid credential";
+    const scanSoundStart = window.history?.state?.scanSoundStart;
+
+    onMount(async () => {
         // We wait a little bit in order not to overlap the different aural feedback
-        setTimeout(async () => await playAudio("invalid"), PLAY_DELAY);
+        const delay = scanSoundStart ? PLAY_DELAY - (Date.now() - scanSoundStart) : PLAY_DELAY;
+        if (delay < 0) {
+            await playAudio("invalid");
+        } else {
+            setTimeout(async () => await playAudio("invalid"), delay);
+        }
     });
 
     function onDone() {
@@ -19,7 +27,7 @@
 <main transition:fly={{ y: 200, duration: 500 }}>
     <section>
         <i class="icon-cross" />
-        <p>{message ?? "Invalid credential"}</p>
+        <p>{message}</p>
     </section>
     <footer>
         <Button label="Done" onClick={onDone} />
diff --git a/identity-enabler/holder-mobile-app/src/pages/Name.svelte b/identity-enabler/holder-mobile-app/src/pages/Name.svelte
index 51b574b..987a33c 100644
--- a/identity-enabler/holder-mobile-app/src/pages/Name.svelte
+++ b/identity-enabler/holder-mobile-app/src/pages/Name.svelte
@@ -4,15 +4,13 @@
     import Button from "../components/Button.svelte";
     import TextField from "../components/TextField.svelte";
     import Header from "../components/Header.svelte";
-    import FullScreenLoader from "../components/FullScreenLoader.svelte";
     import { ServiceFactory } from "../factories/serviceFactory";
-    import { account, error, hasSetupAccount } from "../lib/store";
+    import { account, hasSetupAccount, loadingScreen } from "../lib/store";
     import { showAlert } from "../lib/ui/helpers";
 
     const { Keyboard } = Plugins;
 
     let name = "";
-    let loading = false;
     let background;
 
     function handleOuterClick() {
@@ -31,53 +29,44 @@
             return;
         }
 
-        if (loading) {
-            return;
-        }
-
         Keyboard.hide();
-
-        error.set(null);
-
         account.set({ name: name });
-
-        loading = true;
+        loadingScreen.set("Creating Identity...");
 
         try {
             const identityService = ServiceFactory.get("identity");
             const identity = await identityService.createIdentity();
             await identityService.storeIdentity("did", identity);
-            console.log("Identity", identity);
-            loading = false;
+            loadingScreen.set();
             hasSetupAccount.set(true);
-
             navigate("/home");
         } catch (err) {
-            error.set("Error creating identity. Please try again.");
-            loading = false;
+            await showAlert("Error", "Error creating identity. Please try again.");
+            loadingScreen.set();
         }
     }
 </script>
 
 <main bind:this={background} on:click={handleOuterClick}>
-    {#if loading}
-        <FullScreenLoader label="Creating Identity..." />
-    {:else}
-        <div class="content">
-            <div>
-                <Header text="Set your name" />
-            </div>
-            <div>
-                <img src="/img/inspect.svg" alt="inspect" />
-            </div>
-            <div>
-                <TextField bind:value={name} placeholder="Your Name" />
-            </div>
+    <div class="content">
+        <div>
+            <Header text="Set your name" />
+        </div>
+        <div>
+            <img src="/img/inspect.svg" alt="inspect" />
+        </div>
+        <div>
+            <TextField bind:value={name} placeholder="Your Name" />
         </div>
-        <footer>
-            <Button loadingText={"Generating identity"} disabled={name.length === 0} label="Next" onClick={save} />
-        </footer>
-    {/if}
+    </div>
+    <footer>
+        <Button
+            loadingText={"Generating identity"}
+            disabled={name.length === 0 || Boolean($loadingScreen)}
+            label="Next"
+            onClick={save}
+        />
+    </footer>
 </main>
 
 <style>
diff --git a/identity-enabler/holder-mobile-app/src/pages/Scan.svelte b/identity-enabler/holder-mobile-app/src/pages/Scan.svelte
index 16590ab..d6216d6 100644
--- a/identity-enabler/holder-mobile-app/src/pages/Scan.svelte
+++ b/identity-enabler/holder-mobile-app/src/pages/Scan.svelte
@@ -9,23 +9,21 @@
     const formats = new Map().set(DecodeHintType.POSSIBLE_FORMATS, [BarcodeFormat.DATA_MATRIX, BarcodeFormat.QR_CODE]);
     const reader = new BrowserMultiFormatReader(formats);
 
-    // We delay playing the valid or invalid sound in order not to overlap
-    // with the scanning sound
-    const PLAY_DELAY = 400;
-
     // handles input button
     const imageSelected = e => {
         const image = e.currentTarget.files[0];
 
         const fr = new FileReader();
-        fr.onload = (e: ProgressEvent<FileReader>) => {
-            reader
-                .decodeFromImageUrl(e.target.result as string)
-                .then(result => handleScannerData(result.getText()))
-                .catch(e => {
-                    console.error(e);
-                    navigate("/invalid", { state: { message: "Failed to decode image" } });
-                });
+        fr.onload = async (e: ProgressEvent<FileReader>) => {
+            let result;
+            try {
+                result = await reader.decodeFromImageUrl(e.target.result as string);
+            } catch (e) {
+                console.error(e);
+                navigate("/invalid", { state: { message: "Failed to decode image" } });
+            }
+
+            await handleScannerData(result.getText(), "File");
         };
         fr.readAsDataURL(image);
     };
@@ -46,7 +44,7 @@
             </label>
         </div>
     </header>
-    <Scanner on:message={ev => handleScannerData(ev.detail)} />
+    <Scanner on:message={ev => handleScannerData(ev.detail, "Camera")} />
 </main>
 
 <style>

From 93dd6fb57622e0490d06d2064fdfcb0a27363f68 Mon Sep 17 00:00:00 2001
From: Severin Skillman <severin.skillman@iota.org>
Date: Wed, 22 Dec 2021 16:42:36 +0100
Subject: [PATCH 5/8] added workaround for a bug

---
 .../deviceId-mobile-app/src/lib/scan.ts       | 28 ++++++++++++-------
 1 file changed, 18 insertions(+), 10 deletions(-)

diff --git a/identity-enabler/deviceId-mobile-app/src/lib/scan.ts b/identity-enabler/deviceId-mobile-app/src/lib/scan.ts
index ae36856..5603c02 100644
--- a/identity-enabler/deviceId-mobile-app/src/lib/scan.ts
+++ b/identity-enabler/deviceId-mobile-app/src/lib/scan.ts
@@ -4,6 +4,7 @@ import type { IdentityService } from "../services/identityService";
 import { loadingScreen } from "./store";
 import { playAudio } from "./ui/helpers";
 import { Plugins } from "@capacitor/core";
+import { wait } from "./helpers";
 
 /**
  * Handles data string captured by Camera, DataWedge or Image selection.
@@ -26,14 +27,12 @@ export async function handleScannerData(decodedText: string, method: "Camera" |
         vp = JSON.parse(decodedText);
     } catch (e) {
         console.error(e);
-        loadingScreen.set();
-        navigate("/invalid", { state: { scanSoundStart, message: "Invalid JSON" } });
+        await handleError("Invalid JSON", scanSoundStart);
         return;
     }
 
     if (!vp) {
-        loadingScreen.set();
-        navigate("/invalid", { state: { scanSoundStart } });
+        await handleError("No data", scanSoundStart);
         return;
     }
 
@@ -42,16 +41,14 @@ export async function handleScannerData(decodedText: string, method: "Camera" |
 
     const credentialSubjectId = vp.verifiableCredential?.credentialSubject?.id;
     if (credentialSubjectId === undefined) {
-        loadingScreen.set();
-        navigate("/invalid", { state: { scanSoundStart } });
+        await handleError("Missing credential subject", scanSoundStart);
         return;
     }
 
     const id = JSON.parse(identity.didDoc).id;
     if (id !== credentialSubjectId) {
         // check that this VP/VC is for the current device
-        loadingScreen.set();
-        navigate("/invalid", { state: { scanSoundStart, message: "Incorrect credential subject" } });
+        await handleError("Incorrect credential subject", scanSoundStart);
         return;
     }
 
@@ -59,8 +56,7 @@ export async function handleScannerData(decodedText: string, method: "Camera" |
     const verificationResult = await identityService.verifyVerifiablePresentation(vp);
 
     if (!verificationResult) {
-        loadingScreen.set();
-        navigate("/invalid", { state: { scanSoundStart } });
+        await handleError("Invalid credential", scanSoundStart);
         return;
     }
 
@@ -72,3 +68,15 @@ export async function handleScannerData(decodedText: string, method: "Camera" |
     loadingScreen.set();
     navigate("credential", { state: { credential: vp, save: true } });
 }
+
+async function handleError(message: string, scanSoundStart?: number) {
+    loadingScreen.set();
+
+    if (window.location.pathname === "/invalid") {
+        // workaround to ensure InvalidCredentialPage remounts
+        window.history.back();
+        await wait(550);
+    }
+
+    navigate("/invalid", { state: { scanSoundStart, message } });
+}

From 759c5bb6271a41cd212369dd1d6d9187885d1570 Mon Sep 17 00:00:00 2001
From: Severin Skillman <severin.skillman@iota.org>
Date: Wed, 22 Dec 2021 16:45:10 +0100
Subject: [PATCH 6/8] missing import

---
 identity-enabler/deviceId-mobile-app/src/pages/CreateQR.svelte | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/identity-enabler/deviceId-mobile-app/src/pages/CreateQR.svelte b/identity-enabler/deviceId-mobile-app/src/pages/CreateQR.svelte
index aa7fbb8..66c64df 100644
--- a/identity-enabler/deviceId-mobile-app/src/pages/CreateQR.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/pages/CreateQR.svelte
@@ -7,6 +7,7 @@
     import { ServiceFactory } from "../factories/serviceFactory";
     import Button from "../components/Button.svelte";
     import { showAlert } from "../lib/ui/helpers";
+    import { loadingScreen } from "../lib/store";
 
     const { Device } = Plugins;
 
@@ -29,8 +30,8 @@
             };
             await createMatrix(JSON.stringify(credentialSubject));
         } catch (err) {
-            await showAlert("Error", err.message);
             console.error(err);
+            await showAlert("Error", err.message);
         }
 
         loadingScreen.set();

From c6c13e4da556405991f1b12ca7eece7c43dbcc14 Mon Sep 17 00:00:00 2001
From: Severin Skillman <severin.skillman@iota.org>
Date: Wed, 22 Dec 2021 16:55:15 +0100
Subject: [PATCH 7/8] fixes

---
 .../deviceId-mobile-app/src/pages/CreatePresentation.svelte    | 2 +-
 identity-enabler/holder-mobile-app/src/pages/Home.svelte       | 3 +--
 2 files changed, 2 insertions(+), 3 deletions(-)

diff --git a/identity-enabler/deviceId-mobile-app/src/pages/CreatePresentation.svelte b/identity-enabler/deviceId-mobile-app/src/pages/CreatePresentation.svelte
index bc023a9..5104e32 100644
--- a/identity-enabler/deviceId-mobile-app/src/pages/CreatePresentation.svelte
+++ b/identity-enabler/deviceId-mobile-app/src/pages/CreatePresentation.svelte
@@ -77,7 +77,7 @@
         <div class="header">
             <i class="icon-credential credential-logo" />
             <header>
-                <span>Device {credential?.verifiableCredential?.credentialSubject?.DeviceData["Device Name"]}</span>
+                <span>Device {credential?.verifiableCredential?.credentialSubject?.deviceName}</span>
                 <p>{credential?.metaInformation?.issuer ?? "No issuer information"}</p>
             </header>
         </div>
diff --git a/identity-enabler/holder-mobile-app/src/pages/Home.svelte b/identity-enabler/holder-mobile-app/src/pages/Home.svelte
index 48025e7..9f87f16 100644
--- a/identity-enabler/holder-mobile-app/src/pages/Home.svelte
+++ b/identity-enabler/holder-mobile-app/src/pages/Home.svelte
@@ -114,9 +114,8 @@
                 id: credentialId,
                 enrichment
             };
-            console.log("new credential", credential);
             await updateStorage("credentials", { [credentialKey]: credential });
-            localCredentials.push(credential);
+            localCredentials = localCredentials.concat(credential);
             loadingScreen.set();
         } catch (err) {
             console.log(err);

From cf371f16f5539e54e98419b7ffb8cce1183be608 Mon Sep 17 00:00:00 2001
From: Severin Skillman <severin.skillman@iota.org>
Date: Wed, 22 Dec 2021 17:10:15 +0100
Subject: [PATCH 8/8] minor

---
 identity-enabler/deviceId-mobile-app/src/lib/scan.ts | 7 +++----
 identity-enabler/holder-mobile-app/src/lib/scan.ts   | 2 +-
 2 files changed, 4 insertions(+), 5 deletions(-)

diff --git a/identity-enabler/deviceId-mobile-app/src/lib/scan.ts b/identity-enabler/deviceId-mobile-app/src/lib/scan.ts
index 5603c02..afda637 100644
--- a/identity-enabler/deviceId-mobile-app/src/lib/scan.ts
+++ b/identity-enabler/deviceId-mobile-app/src/lib/scan.ts
@@ -36,15 +36,14 @@ export async function handleScannerData(decodedText: string, method: "Camera" |
         return;
     }
 
-    const identityService = ServiceFactory.get<IdentityService>("identity");
-    const identity = await identityService.retrieveIdentity();
-
     const credentialSubjectId = vp.verifiableCredential?.credentialSubject?.id;
     if (credentialSubjectId === undefined) {
         await handleError("Missing credential subject", scanSoundStart);
         return;
     }
 
+    const identityService = ServiceFactory.get<IdentityService>("identity");
+    const identity = await identityService.retrieveIdentity();
     const id = JSON.parse(identity.didDoc).id;
     if (id !== credentialSubjectId) {
         // check that this VP/VC is for the current device
@@ -60,12 +59,12 @@ export async function handleScannerData(decodedText: string, method: "Camera" |
         return;
     }
 
+    loadingScreen.set();
     await playAudio("valid");
     await Plugins.Toast.show({
         text: "Credential verified!",
         position: "center"
     });
-    loadingScreen.set();
     navigate("credential", { state: { credential: vp, save: true } });
 }
 
diff --git a/identity-enabler/holder-mobile-app/src/lib/scan.ts b/identity-enabler/holder-mobile-app/src/lib/scan.ts
index 80f1078..cb3e137 100644
--- a/identity-enabler/holder-mobile-app/src/lib/scan.ts
+++ b/identity-enabler/holder-mobile-app/src/lib/scan.ts
@@ -38,8 +38,8 @@ export async function handleScannerData(decodedText: string, method: "Camera" |
         return;
     }
 
-    setTimeout(async () => await playAudio("valid"), PLAY_DELAY);
     loadingScreen.set();
+    setTimeout(async () => await playAudio("valid"), PLAY_DELAY);
     navigate("/devicecredential", { state: { credentialSubject } });
 }
 
